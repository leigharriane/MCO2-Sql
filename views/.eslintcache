[{"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/index.js":"1","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/App.js":"2","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/MovieList.js":"3","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/contexts/MovieContext.js":"4","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/Movie.js":"5","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/Pagination.js":"6","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/AddForm.js":"7","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/EditForm.js":"8"},{"size":225,"mtime":1644924030792,"results":"9","hashOfConfig":"10"},{"size":451,"mtime":1644937742682,"results":"11","hashOfConfig":"10"},{"size":2994,"mtime":1645000082898,"results":"12","hashOfConfig":"10"},{"size":2518,"mtime":1645000199044,"results":"13","hashOfConfig":"10"},{"size":2047,"mtime":1645000133901,"results":"14","hashOfConfig":"10"},{"size":2360,"mtime":1645000082899,"results":"15","hashOfConfig":"10"},{"size":1876,"mtime":1644924030790,"results":"16","hashOfConfig":"10"},{"size":1941,"mtime":1644937756594,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1nr2wl6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/index.js",[],["38","39"],"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/App.js",[],"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/MovieList.js",[],"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/contexts/MovieContext.js",["40"],"import {createContext, useEffect, useState} from 'react';\nimport Axios from 'axios';\n\nexport const MovieContext = createContext()\n\n\nconst MovieContextProvider  = (props) => {\n\n    const [data, setData] = useState ([])\n    useEffect(()=>{\n        Axios.get(`${process.env.REACT_APP_VIEWSHOST}/getdata`).then((response) =>{\n        console.log(\"ANSWER\")\n        setData(response.data);\n        console.log(response.data)\n      }).catch((err)=>{\n        console.log(err);\n      });\n      console.log(\"hatdog\");\n      console.log(data);\n    },[])\n\n    const [movies, setMovies] = useState([])\n\nuseEffect(()=> {\n    setMovies(data);\n},[data])\n\n// useEffect(() => {\n//     localStorage.setItem('movies', JSON.stringify(data));\n// },[])\n\n\nconst sortedMovies = movies;\n\n// const addMovie = (name, rank, year) => {\n//     setMovies([...movies , {id:uuidv4(), name, year, rank}])\n// }\n\nconst addMovie = (name, year, rank) => {\n    window.location = '/' // i.e. window.location='default.aspx'\n    console.log(name);\n    console.log(year);\n    console.log(rank);\n    Axios.post(`${process.env.REACT_APP_VIEWSHOST}/add/${name}/${year}/${rank}`);\n    alert(`Movie name: ${name} Created`);\n    window.location = '/' // i.e. window.location='default.aspx'\n }\n\n/*const deleteMovie = (id) => {\n    setMovies(movies.filter(movie => movie.id !== id))\n}*/\n\n\nconst deleteMovie = (id, year) => {\n    alert(`Movie id: ${id} Deleted`);\n    window.location = '/'\n\n    console.log(id);\n    console.log(year);\n    console.log(data);\n    Axios.delete(`${process.env.REACT_APP_VIEWSHOST}/delete/${id}/${year}`);\n};\n\nconst addData= () => { \n    console.log(\"pumasok movie\")\n    Axios.get(`${process.env.REACT_APP_VIEWSHOST}/addData`);\n};\n \n\nconst updateMovie = (updatedMovie) => {\n\n    console.log(updatedMovie.id)\n    console.log(updatedMovie.name)\n    console.log(updatedMovie.year)\n    console.log(updatedMovie.rank)\n    console.log(updatedMovie.prevYear)\n    //setMovies(movies.map((data) => data.id === id ? updatedMovie : data))\n    Axios.get(`${process.env.REACT_APP_VIEWSHOST}/update/${updatedMovie.id}/${updatedMovie.name}/${updatedMovie.year}/${updatedMovie.rank}/${updatedMovie.prevYear}`);\n    alert(`Movie ID: ${updatedMovie.id} Updated`);\n    window.location = '/' // i.e. window.location='default.aspx'\n}\n\n    return (\n        <MovieContext.Provider value={{sortedMovies, addMovie, deleteMovie, updateMovie,addData}}>\n            {props.children}\n        </MovieContext.Provider>\n        \n    )\n}\n\nexport default MovieContextProvider;","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/Movie.js",["41"],"import {useContext, useState, useEffect} from 'react';\nimport {MovieContext} from '../contexts/MovieContext';\nimport { Modal, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport EditForm from './EditForm'\n\n\nconst Movie = ({movie}) => {\n\n   const {deleteMovie} = useContext(MovieContext)\n\n    const [show, setShow] = useState(false);\n    \n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n\n    useEffect(() => {\n        handleClose()\n    }, [Movie])\n\n\n    return (\n        <>\n            <td>{movie.id}</td>\n            <td>{movie.name}</td>\n            <td>{movie.year}</td>\n            <td>{movie.rank}</td>\n            <td>\n                <OverlayTrigger\n                    overlay={\n                        <Tooltip id={`tooltip-top`}>\n                            Edit\n                        </Tooltip>\n                    }>\n                    <button onClick={handleShow}  className=\"btn text-warning btn-act\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE254;</i></button>\n                </OverlayTrigger>\n                <OverlayTrigger\n                    overlay={\n                        <Tooltip id={`tooltip-top`}>\n                            Delete\n                        </Tooltip>\n                    }>\n                    <button onClick={() => deleteMovie(movie.id,movie.year)}  className=\"btn text-danger btn-act\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE872;</i></button>\n                </OverlayTrigger>\n                \n            </td>\n\n            <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>\n                Edit Movie\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <EditForm theMovie={movie} />\n        </Modal.Body>\n        <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close Button\n                </Button>\n        </Modal.Footer>\n    </Modal>\n        </>\n    )\n}\n\nexport default Movie;","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/Pagination.js",["42"],"import { MovieContext } from '../contexts/MovieContext';\nimport { useContext, useState, useEffect } from 'react';\n\n\n\nconst Pagination = ({ pages, setCurrentPage, currentMovies, sortedMovies }) => {\n\n    const { addData } = useContext(MovieContext)\n\n    const numOfPages = [];\n\n    for (let i = 1; i <= pages; i++) {\n        numOfPages.push(i);\n    }\n\n    const [currentButton, setCurrentButton] = useState(1);\n\n    useEffect(() => {\n        setCurrentPage(currentButton);\n    }, [currentButton, setCurrentPage])\n\n    return (\n        <div className=\"clearfix\">\n            <div className=\"hint-text\">Showing <b>{currentMovies.length}</b> out of <b>{sortedMovies.length}</b> entries</div>\n            <ul className=\"pagination\">\n                <li className={`${currentButton === 1 ? 'page-item disabled' : 'page-item'}`}><a href=\"#!\"\n                    onClick={() => setCurrentButton((prev) => prev === 1 ? prev : prev - 1)}\n                >Previous</a></li>\n                {\n                    numOfPages.map((page, index) => {\n                        return (\n                            <li key={index} className={`${currentButton === page ? 'page-item active' : 'page-item'}`}><a href=\"#!\" className=\"page-link\"\n                                onClick={() => setCurrentButton(page)}\n                            >{page}</a></li>\n                        )\n                    })\n\n                }\n\n                <li className={`${currentButton === numOfPages.length ? 'page-item disabled' : 'page-item'}`}><a href=\"#!\"\n                    onClick={() => setCurrentButton((next) => next === numOfPages.length ? next : next + 1)}\n                >Next</a></li>\n\n                <li className=\"addMore\"><a href=\"\" onClick={() => addData()}  > Load More Data</a>  </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Pagination;\n\n/* <li className=\"page-item disabled\"><a href=\"#!\">Previous</a></li>\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">1</a></li>\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">2</a></li>\n<li className=\"page-item active\"><a href=\"#!\" className=\"page-link\">3</a></li>\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">4</a></li>\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">5</a></li>\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">Next</a></li> */","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/AddForm.js",[],"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/EditForm.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":20,"column":7,"nodeType":"49","endLine":20,"endColumn":9,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"51","line":18,"column":8,"nodeType":"49","endLine":18,"endColumn":15,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":44,"column":41,"nodeType":"55","endLine":44,"endColumn":80},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["58"],"React Hook useEffect has an unnecessary dependency: 'Movie'. Either exclude it or remove the dependency array. Outer scope values like 'Movie' aren't valid dependencies because mutating them doesn't re-render the component.",["59"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [data]",{"range":"64","text":"65"},"Update the dependencies array to be: []",{"range":"66","text":"67"},[539,541],"[data]",[493,500],"[]"]